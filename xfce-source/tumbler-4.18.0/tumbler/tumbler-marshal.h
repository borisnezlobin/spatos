#ifndef __TUMBLER_MARSHAL_H__
#define __TUMBLER_MARSHAL_H__
/* This file is generated by glib-genmarshal, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */
#ifndef __TUMBLER_MARSHAL_MARSHAL_H__
#define __TUMBLER_MARSHAL_MARSHAL_H__

#include <glib-object.h>

G_BEGIN_DECLS

/* VOID:STRING,UINT,INT,STRING (./tumbler-marshal.list:1) */
extern
void tumbler_marshal_VOID__STRING_UINT_INT_STRING (GClosure     *closure,
                                                   GValue       *return_value,
                                                   guint         n_param_values,
                                                   const GValue *param_values,
                                                   gpointer      invocation_hint,
                                                   gpointer      marshal_data);

/* VOID:UINT,BOXED,UINT,INT,STRING,STRING (./tumbler-marshal.list:2) */
extern
void tumbler_marshal_VOID__UINT_BOXED_UINT_INT_STRING_STRING (GClosure     *closure,
                                                              GValue       *return_value,
                                                              guint         n_param_values,
                                                              const GValue *param_values,
                                                              gpointer      invocation_hint,
                                                              gpointer      marshal_data);

/* VOID:UINT,BOXED,STRING (./tumbler-marshal.list:3) */
extern
void tumbler_marshal_VOID__UINT_BOXED_STRING (GClosure     *closure,
                                              GValue       *return_value,
                                              guint         n_param_values,
                                              const GValue *param_values,
                                              gpointer      invocation_hint,
                                              gpointer      marshal_data);

/* VOID:UINT,STRING (./tumbler-marshal.list:4) */
extern
void tumbler_marshal_VOID__UINT_STRING (GClosure     *closure,
                                        GValue       *return_value,
                                        guint         n_param_values,
                                        const GValue *param_values,
                                        gpointer      invocation_hint,
                                        gpointer      marshal_data);


G_END_DECLS

#endif /* __TUMBLER_MARSHAL_MARSHAL_H__ */
#endif /* !__TUMBLER_MARSHAL_H__ */
