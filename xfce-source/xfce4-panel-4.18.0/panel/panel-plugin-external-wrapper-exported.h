/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __PANEL_PLUGIN_EXTERNAL_WRAPPER_EXPORTED_H__
#define __PANEL_PLUGIN_EXTERNAL_WRAPPER_EXPORTED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.xfce.Panel.Wrapper */

#define XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED (xfce_panel_plugin_wrapper_exported_get_type ())
#define XFCE_PANEL_PLUGIN_WRAPPER_EXPORTED(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED, XfcePanelPluginWrapperExported))
#define XFCE_PANEL_PLUGIN_WRAPPER_IS_EXPORTED(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED))
#define XFCE_PANEL_PLUGIN_WRAPPER_EXPORTED_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED, XfcePanelPluginWrapperExportedIface))

struct _XfcePanelPluginWrapperExported;
typedef struct _XfcePanelPluginWrapperExported XfcePanelPluginWrapperExported;
typedef struct _XfcePanelPluginWrapperExportedIface XfcePanelPluginWrapperExportedIface;

struct _XfcePanelPluginWrapperExportedIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_provider_signal) (
    XfcePanelPluginWrapperExported *object,
    GDBusMethodInvocation *invocation,
    guint arg_signal);

  gboolean (*handle_remote_event_result) (
    XfcePanelPluginWrapperExported *object,
    GDBusMethodInvocation *invocation,
    guint arg_handle,
    gboolean arg_result);

  void (*remote_event) (
    XfcePanelPluginWrapperExported *object,
    const gchar *arg_name,
    GVariant *arg_value,
    guint arg_handle);

  void (*set) (
    XfcePanelPluginWrapperExported *object,
    GVariant *arg_values);

};

GType xfce_panel_plugin_wrapper_exported_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *xfce_panel_plugin_wrapper_exported_interface_info (void);
guint xfce_panel_plugin_wrapper_exported_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void xfce_panel_plugin_wrapper_exported_complete_provider_signal (
    XfcePanelPluginWrapperExported *object,
    GDBusMethodInvocation *invocation);

void xfce_panel_plugin_wrapper_exported_complete_remote_event_result (
    XfcePanelPluginWrapperExported *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void xfce_panel_plugin_wrapper_exported_emit_set (
    XfcePanelPluginWrapperExported *object,
    GVariant *arg_values);

void xfce_panel_plugin_wrapper_exported_emit_remote_event (
    XfcePanelPluginWrapperExported *object,
    const gchar *arg_name,
    GVariant *arg_value,
    guint arg_handle);



/* D-Bus method calls: */
void xfce_panel_plugin_wrapper_exported_call_provider_signal (
    XfcePanelPluginWrapperExported *proxy,
    guint arg_signal,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean xfce_panel_plugin_wrapper_exported_call_provider_signal_finish (
    XfcePanelPluginWrapperExported *proxy,
    GAsyncResult *res,
    GError **error);

gboolean xfce_panel_plugin_wrapper_exported_call_provider_signal_sync (
    XfcePanelPluginWrapperExported *proxy,
    guint arg_signal,
    GCancellable *cancellable,
    GError **error);

void xfce_panel_plugin_wrapper_exported_call_remote_event_result (
    XfcePanelPluginWrapperExported *proxy,
    guint arg_handle,
    gboolean arg_result,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean xfce_panel_plugin_wrapper_exported_call_remote_event_result_finish (
    XfcePanelPluginWrapperExported *proxy,
    GAsyncResult *res,
    GError **error);

gboolean xfce_panel_plugin_wrapper_exported_call_remote_event_result_sync (
    XfcePanelPluginWrapperExported *proxy,
    guint arg_handle,
    gboolean arg_result,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_PROXY (xfce_panel_plugin_wrapper_exported_proxy_get_type ())
#define XFCE_PANEL_PLUGIN_WRAPPER_EXPORTED_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_PROXY, XfcePanelPluginWrapperExportedProxy))
#define XFCE_PANEL_PLUGIN_WRAPPER_EXPORTED_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_PROXY, XfcePanelPluginWrapperExportedProxyClass))
#define XFCE_PANEL_PLUGIN_WRAPPER_EXPORTED_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_PROXY, XfcePanelPluginWrapperExportedProxyClass))
#define XFCE_PANEL_PLUGIN_WRAPPER_IS_EXPORTED_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_PROXY))
#define XFCE_PANEL_PLUGIN_WRAPPER_IS_EXPORTED_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_PROXY))

typedef struct _XfcePanelPluginWrapperExportedProxy XfcePanelPluginWrapperExportedProxy;
typedef struct _XfcePanelPluginWrapperExportedProxyClass XfcePanelPluginWrapperExportedProxyClass;
typedef struct _XfcePanelPluginWrapperExportedProxyPrivate XfcePanelPluginWrapperExportedProxyPrivate;

struct _XfcePanelPluginWrapperExportedProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  XfcePanelPluginWrapperExportedProxyPrivate *priv;
};

struct _XfcePanelPluginWrapperExportedProxyClass
{
  GDBusProxyClass parent_class;
};

GType xfce_panel_plugin_wrapper_exported_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (XfcePanelPluginWrapperExportedProxy, g_object_unref)
#endif

void xfce_panel_plugin_wrapper_exported_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
XfcePanelPluginWrapperExported *xfce_panel_plugin_wrapper_exported_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
XfcePanelPluginWrapperExported *xfce_panel_plugin_wrapper_exported_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void xfce_panel_plugin_wrapper_exported_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
XfcePanelPluginWrapperExported *xfce_panel_plugin_wrapper_exported_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
XfcePanelPluginWrapperExported *xfce_panel_plugin_wrapper_exported_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_SKELETON (xfce_panel_plugin_wrapper_exported_skeleton_get_type ())
#define XFCE_PANEL_PLUGIN_WRAPPER_EXPORTED_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_SKELETON, XfcePanelPluginWrapperExportedSkeleton))
#define XFCE_PANEL_PLUGIN_WRAPPER_EXPORTED_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_SKELETON, XfcePanelPluginWrapperExportedSkeletonClass))
#define XFCE_PANEL_PLUGIN_WRAPPER_EXPORTED_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_SKELETON, XfcePanelPluginWrapperExportedSkeletonClass))
#define XFCE_PANEL_PLUGIN_WRAPPER_IS_EXPORTED_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_SKELETON))
#define XFCE_PANEL_PLUGIN_WRAPPER_IS_EXPORTED_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), XFCE_PANEL_PLUGIN_WRAPPER_TYPE_EXPORTED_SKELETON))

typedef struct _XfcePanelPluginWrapperExportedSkeleton XfcePanelPluginWrapperExportedSkeleton;
typedef struct _XfcePanelPluginWrapperExportedSkeletonClass XfcePanelPluginWrapperExportedSkeletonClass;
typedef struct _XfcePanelPluginWrapperExportedSkeletonPrivate XfcePanelPluginWrapperExportedSkeletonPrivate;

struct _XfcePanelPluginWrapperExportedSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  XfcePanelPluginWrapperExportedSkeletonPrivate *priv;
};

struct _XfcePanelPluginWrapperExportedSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType xfce_panel_plugin_wrapper_exported_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (XfcePanelPluginWrapperExportedSkeleton, g_object_unref)
#endif

XfcePanelPluginWrapperExported *xfce_panel_plugin_wrapper_exported_skeleton_new (void);


G_END_DECLS

#endif /* __PANEL_PLUGIN_EXTERNAL_WRAPPER_EXPORTED_H__ */
