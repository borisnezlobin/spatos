[package]
name = "dlmalloc"
version = "0.2.4"
authors = ["Alex Crichton <alex@alexcrichton.com>"]
license = "MIT/Apache-2.0"
readme = "README.md"
repository = "https://github.com/alexcrichton/dlmalloc-rs"
homepage = "https://github.com/alexcrichton/dlmalloc-rs"
documentation = "https://docs.rs/dlmalloc"
description = """
A Rust port of the dlmalloc allocator
"""

[package.metadata.docs.rs]
features = ['global']

[lib]
doctest = false

[target.'cfg(all(unix, not(target_arch = "wasm32")))'.dependencies]
libc = { version = "0.2", default-features = false, optional = true }

[dependencies]
# For more information on these dependencies see rust-lang/rust's
# `src/tools/rustc-std-workspace` folder
core = { version = '1.0.0', optional = true, package = 'rustc-std-workspace-core' }
compiler_builtins = { version = '0.1.0', optional = true }

[dev-dependencies]
rand = "0.3"

[profile.release]
debug-assertions = true

[features]
# Enable implementations of the `GlobalAlloc` standard library API, exporting a
# new `GlobalDlmalloc` as well which implements this trait.
global = ["system", "rust_api"]

# Enable very expensive debug checks in this crate
debug = []

# Enables OS APIs based on the current target, can be implemented manually
# otherwise.
system = ["libc"]

rustc-dep-of-std = ['core', 'compiler_builtins/rustc-dep-of-std']

c_api = []
rust_api = []

default = ["global", "rust_api"]
